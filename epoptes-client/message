#!/usr/bin/env python3
# -*- coding: utf-8 -*-

###########################################################################
# Display a simple window with a message.
#
# Copyright (C) 2012-2018 Alkis Georgopoulos <alkisg@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# On Debian GNU/Linux systems, the complete text of the GNU General
# Public License can be found in `/usr/share/common-licenses/GPL".
############################################################################

import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk


class MessageWindow(Gtk.Window):

    def __init__(self, text, title="Epoptes", markup=True, icon_name="dialog-information"):
        Gtk.Window.__init__(self, title=title, icon_name=icon_name)

        grid = Gtk.Grid(column_spacing=10, row_spacing=10, margin=10)
        self.add(grid)

        image = Gtk.Image.new_from_icon_name(icon_name, Gtk.IconSize.DIALOG)
        grid.add(image)

        # Always load the plain text first in case the markup parsing fails
        label = Gtk.Label(
            label=text, selectable=True, hexpand=True, vexpand=True, halign=Gtk.Align.START, valign=Gtk.Align.START)
        if markup:
            label.set_markup(text)
        grid.add(label)

        button = Gtk.Button.new_from_stock(Gtk.STOCK_CLOSE)
        button.set_hexpand(False)
        button.set_halign(Gtk.Align.END)
        button.connect("clicked", Gtk.main_quit)
        grid.attach(button, 1, 1, 2, 1)
        self.set_focus_child(button)

        accelgroup = Gtk.AccelGroup()
        key, modifier = Gtk.accelerator_parse('Escape')
        accelgroup.connect(key, modifier, Gtk.AccelFlags.VISIBLE, Gtk.main_quit)
        self.add_accel_group(accelgroup)


if __name__ == '__main__':
    from sys import argv, stderr

    if len(argv) <= 1 or len(argv) > 5:
        stderr.write("Usage: message text [title] [markup] [icon_name]\n")
        exit(1)

    window = MessageWindow(
        argv[1],
        argv[2] if len(argv) > 2 else "Epoptes",
        argv[3] == "True" if len(argv) > 3 else True,
        argv[4] if len(argv) > 4 else "dialog-information"
    )
    window.connect("destroy", Gtk.main_quit)
    window.show_all()
    Gtk.main()
