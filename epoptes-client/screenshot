#!/usr/bin/env python3
# -*- coding: utf-8 -*-

###########################################################################
# Write a thumbnail of the screen to stdout.
#
# Copyright (C) 2010 Fotis Tsamis <ftsamis@gmail.com>
# 2018, Alkis Georgopoulos <alkisg@gmail.com>
# Many thanks to Uli Schlachter <psychon@znc.in> for helping with the cairo stuff
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# On Debian GNU/Linux systems, the complete text of the GNU General
# Public License can be found in `/usr/share/common-licenses/GPL".
############################################################################

import cairo
import gi
import sys
gi.require_version('Gdk', '3.0')
from gi.repository import Gdk


if len(sys.argv) == 3:
    width, height = int(sys.argv[1]), int(sys.argv[2])
else:
    sys.stderr.write("Usage: screenshot width height\n")
    exit(1)

root = Gdk.get_default_root_window()
if root is None:
    exit(1)
geometry = root.get_geometry()

surface = cairo.ImageSurface(cairo.FORMAT_RGB24, width, height)
cr = cairo.Context(surface)
# TODO: check if this actually does client-size resizing
cr.scale(float(width)/geometry.width, float(height)/geometry.height)
Gdk.cairo_set_source_window(cr, root, 0, 0)
cr.paint()

# TODO: is a pixbuf necessary, or can we get the bytes directly from the cairo surface?
pixbuf = Gdk.pixbuf_get_from_surface(surface, 0, 0, width, height)
rowst = pixbuf.get_rowstride()
pixels = pixbuf.get_pixels()

try:
    sys.stdout.buffer.flush()
    sys.stdout.buffer.write(bytearray("%s\n%ix%i\n" % (rowst, width, height), "ascii"))
    sys.stdout.buffer.write(pixels)
    # TODO: for some reason, the last padding isn't included, so do it manually
    sys.stdout.buffer.write(b"\0"*(rowst - 3*width))
    sys.stdout.buffer.flush()
except:
    sys.stderr.write("Error while sending screenshot\n")
